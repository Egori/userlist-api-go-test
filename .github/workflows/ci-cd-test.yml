name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Install dependencies
        run: go mod tidy

      - name: Run golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.54.2
          ./bin/golangci-lint run
  
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: ./internal/user/tests/service_test.go -v

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Install dependencies
        run: go mod tidy
      
      - name: Build the application
        run:  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o userlist-api ./cmd/app

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.TEST_SERVER }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Create directory on the server
        env:
          TEST_SERVER: ${{ secrets.TEST_SERVER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          # Создаём директорию на сервере
          ssh -i ssh_key test@${{ secrets.TEST_SERVER }} "mkdir -p /home/test/userlist-api"

      - name: Copy files to the server
        env:
          TEST_SERVER: ${{ secrets.TEST_SERVER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          cd $GITHUB_WORKSPACE  # Переход в корневую директорию репозитория
          # Копируем файлы на сервер
          scp -i ssh_key userlist-api test@${{ secrets.TEST_SERVER }}:/home/test/userlist-api
          scp -i ssh_key .env test@${{ secrets.TEST_SERVER }}:/home/test/userlist-api
          scp -i ssh_key Dockerfile test@${{ secrets.TEST_SERVER }}:/home/test/userlist-api
          scp -i ssh_key docker-compose.yml test@${{ secrets.TEST_SERVER }}:/home/test/userlist-api

      - name: Deploy application
        env:
          TEST_SERVER: ${{ secrets.TEST_SERVER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh -i ssh_key test@${{ secrets.TEST_SERVER }} << 'EOF'
            cd /home/test/userlist-api
            docker-compose down || true
            docker-compose up -d --build
          EOF

